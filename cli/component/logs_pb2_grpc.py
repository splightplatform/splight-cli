# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import logs_pb2 as logs__pb2


class LogsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StashLogEntry = channel.stream_unary(
            '/LogsService/StashLogEntry',
            request_serializer=logs__pb2.LogEntry.SerializeToString,
            response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class LogsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StashLogEntry(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LogsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'StashLogEntry': grpc.stream_unary_rpc_method_handler(
            servicer.StashLogEntry,
            request_deserializer=logs__pb2.LogEntry.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'LogsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))

 # This class is part of an EXPERIMENTAL API.


class LogsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StashLogEntry(request_iterator,
                      target,
                      options=(),
                      channel_credentials=None,
                      call_credentials=None,
                      insecure=False,
                      compression=None,
                      wait_for_ready=None,
                      timeout=None,
                      metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/LogsService/StashLogEntry',
                                              logs__pb2.LogEntry.SerializeToString,
                                              google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                                              options, channel_credentials,
                                              insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
