name: "Checking version upgrade"
on:
  pull_request:
    types:
      [opened, synchronize]
    branches:
      - '**'
jobs:
  check_pypi_version:
    runs-on: ubuntu-latest
    name: checking pypi version
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - run: pip install -r requirements.txt
      - run: python .github/workflows/check_pypi_version.py

  check_branch_version:
    runs-on: ubuntu-latest
    name: checking branch version
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >>$GITHUB_OUTPUT
        id: extract_branch
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - run: pip install -r requirements.txt
      - run: python .github/workflows/check_branch_version.py ${{ github.head_ref }}

  compare-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get current branch name
        run: echo "CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV

      - name: Get version from current branch
        run: echo "BRANCH_VERSION=$(grep -Eo '__version__ = \"[^\"]+\"' cli/version.py | awk -F'"' '{ print $2 }')" >> $GITHUB_ENV

      - name: Checkout master branch
        run: git checkout master

      - name: Get version from master branch
        run: echo "MASTER_VERSION=$(grep -Eo '__version__ = \"[^\"]+\"' cli/version.py | awk -F'"' '{ print $2 }')" >> $GITHUB_ENV

      - name: Checkout current branch
        run: git checkout ${{ github.CURRENT_BRANCH }}

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - run: pip install -r requirements.txt
      - run: python .github/workflows/check_branch_version.py ${{ github.MASTER_VERSION }} ${{ github.BRANCH_VERSION}}
